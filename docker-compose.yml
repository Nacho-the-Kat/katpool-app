# version 0.4
services:
  katpool-db:
    image: postgres
    container_name: katpool-db
    networks:
      - backend
    volumes:
      - /root/docker_deployment/postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    restart: always
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  katpool-db-migrate:
    image: postgres
    container_name: katpool-db-migrate
    networks:
      - backend
    depends_on:
      - katpool-db
    volumes:
      - ./migration.sql:/migration.sql
    env_file:
      - .env
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'
    entrypoint: >
      sh -c "
      until pg_isready -U $POSTGRES_USER -h postgres; do
        echo 'Waiting for Postgres to be ready...';
        sleep 2;
      done;
      export PGPASSWORD=$POSTGRES_PASSWORD;
      psql -U $POSTGRES_USER -h postgres -d $POSTGRES_DB -f /migration.sql;
      "

  # Redis service
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - backend
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  kaspad:
    container_name: kaspad
    image: supertypo/rusty-kaspad:v1.0.0
    restart: unless-stopped
    ports:
      - '16111:16111/tcp'
      - '16110:16110/tcp' # gRPC
      - '17110:17110/tcp' # wRPC (borsh)
      - '18110:18110/tcp' # wRPC (json)
    volumes:
      - /root/docker_deployment/kaspad_mainnet:/app/data/
    networks:
      - backend
    command: kaspad --yes --nologfiles --disable-upnp --utxoindex --rpclisten=0.0.0.0:16110 --rpclisten-borsh=0.0.0.0:17110 --rpclisten-json=0.0.0.0:18110
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  # kaspad-test10: # REGULAR TESTNET
  #   container_name: kaspad-test10
  #   image: supertypo/rusty-kaspad:v1.0.0
  #   restart: unless-stopped
  #   ports:
  #     - "16211:16211/tcp"
  #     - "16210:16210/tcp" # gRPC
  #     - "17210:17210/tcp" # wRPC (borsh)
  #     - "18210:18210/tcp" # wRPC (json)
  #   volumes:
  #     - /root/docker_deployment/kaspad_testnet10:/app/data/
  #   networks:
  #     - backend
  #   command: kaspad --yes --nologfiles --disable-upnp --utxoindex --testnet --rpclisten=0.0.0.0:16210 --rpclisten-borsh=0.0.0.0:17210 --rpclisten-json=0.0.0.0:18210
  #   logging:
  #     driver: journald
  #     options:
  #       tag: "{{.Name}}"

  kaspad-test11: # 10BPS TESTNET
    container_name: kaspad-test11
    image: supertypo/rusty-kaspad:tn11
    restart: unless-stopped
    ports:
      - "16311:16311/tcp"
      - "16310:16310/tcp" # gRPC
      - "17310:17310/tcp" # wRPC (borsh)
      - "18310:18310/tcp" # wRPC (json)
    volumes:
      - /root/docker_deployment/kaspad_testnet11:/app/data/
    networks:
      - backend
    command: kaspad --yes --nologfiles --disable-upnp --utxoindex --testnet --netsuffix=11 --rpclisten=0.0.0.0:16310 --rpclisten-borsh=0.0.0.0:17310 --rpclisten-json=0.0.0.0:18310
    logging:
      driver: journald
      options:
        tag: "{{.Name}}"

  go-app:
    image: ghcr.io/nacho-the-kat/katpool-blocktemplate-fetcher:beta-v1.0.2-main # Build the Go app from the ./app directory
    pull_policy: always
    container_name: go-app
    env_file:
      - .env
    depends_on:
      - redis
      - kaspad
    volumes:
      - ./config:/app/config
    networks:
      - backend
    restart: always
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  katpool-app:
    image: ghcr.io/nacho-the-kat/katpool-app:beta-v1.0.2-main
    pull_policy: always
    container_name: katpool-app
    depends_on:
      - katpool-db
      - redis
      - katpool-monitor
    ports:
      - '1111:1111'
      - '2222:2222'
      - '3333:3333'
      - '4444:4444'
      - '5555:5555'
      - '6666:6666'
      - '7777:7777'
      - '8888:8888'
    networks:
      - backend
    volumes:
      - ./config:/app/config
      - /root/docker_deployment/katpool-app-logs/:/app/katpool-app-logs/
    env_file:
      - .env
    restart: always
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  katpool-monitor:
    image: ghcr.io/nacho-the-kat/katpool-monitor:beta-v1.0.2-main
    pull_policy: always
    container_name: katpool-monitor
    depends_on:
      - katpool-db
    networks:
      - backend
    volumes:
      - /root/docker_deployment/config:/app/config
    env_file:
      - .env
    ports:
      - '9301:9301'
      - '9300:9300'
    restart: always
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  katpool-payment:
    image: ghcr.io/nacho-the-kat/katpool-payment:beta-v1.0.2-main
    pull_policy: always
    container_name: katpool-payment
    depends_on:
      - katpool-db
    volumes:
      - ./config:/app/config
      - /root/docker_deployment/data/:/app/data/
      - /root/docker_deployment/katpool-payment-logs/:/app/katpool-payment-logs/
    networks:
      - backend
    env_file:
      - .env
    restart: always
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  # https://prometheus.io/docs/prometheus/latest/storage/#operational-aspects
  katpool-prmths:
    image: prom/prometheus
    user: root
    container_name: katpool-prmths
    depends_on:
      - katpool-db
    ports:
      - '9090:9090' # Expose for external access
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - /root/docker_deployment/prometheus_data:/prometheus
    networks:
      - backend
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      #     - '--web.enable-admin-api' # This was used to fetch snapshots.
      - '--web.enable-remote-write-receiver'
      - '--storage.tsdb.retention.time=12w' # Retain data for 12 week = 3 months
      # Retention time defaults to 15d. Supported units: y, w, d, h, m, s, ms.
    restart: always
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  katpool-nginx:
    container_name: katpool-nginx
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - '8080:8080'
    networks:
      - backend
    depends_on:
      - katpool-victoria-metrics
      - katpool-monitor
    restart: always
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  katpool-backup:
    image: ghcr.io/nacho-the-kat/katpool-app-db-backup:beta-v1.0.2-main
    pull_policy: always
    container_name: katpool-backup
    depends_on:
      - katpool-db
    env_file:
      - .env
    volumes:
      - /root/docker_deployment/backup/files:/backup/files
      - ./config:/config
      - ./backup/google-credentials.json:/app/google-credentials.json
      - ./src/monitoring:/src/monitoring
      - ./src/cron-schedule.ts:/src/cron-schedule.ts
    networks:
      - backend
    restart: always
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  katpool-victoria-metrics:
    image: victoriametrics/victoria-metrics:v1.93.4
    container_name: katpool-victoria-metrics
    depends_on:
      - katpool-db
    volumes:
      - /root/docker_deployment/victoria_data:/victoria-metrics-data
    networks:
      - backend
    ports:
      - '8428:8428' # Expose for external access and vmctl
    command:
      - '-storageDataPath=/victoria-metrics-data'
      - '-retentionPeriod=1y'
      - '-httpListenAddr=:8428'
      - '-memory.allowedPercent=60'
      - '-search.maxConcurrentRequests=8'
      - '-search.maxQueryDuration=60s'
      - '--search.maxSeries=500000000'
      - '--search.maxUniqueTimeseries=500000000'
      - '--search.maxSamplesPerQuery=500000000' # default: 1e9
      - '--search.maxPointsPerTimeseries=500000000' # increase if long ranges
    stop_grace_period: 30s
    restart: always
    logging:
      driver: journald
      options:
        tag: '{{.Name}}'

  katpool-vmagent:
    image: victoriametrics/vmagent:v1.97.0
    container_name: katpool-vmagent
    command:
      - '-promscrape.config=/etc/vmagent.yml'
      - '-remoteWrite.url=http://katpool-victoria-metrics:8428/api/v1/write'
    networks:
      - backend
    volumes:
      - ./vmagent.yml:/etc/vmagent.yml

  # This is a one-time migration.
  # This service was used to migrate Prometheus metrics to VictoriaMetrics.
  # katpool-vmctl-migration:
  #   image: victoriametrics/vmctl:v1.93.4
  #   container_name: katpool-vmctl-migration
  #   command: >
  #     prometheus
  #     -s
  #     --vm-addr=http://katpool-victoria-metrics:8428/
  #     --prom-snapshot=/prometheus/data/snapshots/20250610T091409Z-6d277dbc1dba37dc
  #     --prom-filter-label=__name__ \
  #     --prom-filter-label-value='^(worker_hash_rate_GHps|pool_hash_rate_GHps|miner_hash_rate_GHps)$'
  #   networks:
  #     - backend
  #   volumes_from:
  #     - prometheus:ro
  #   stdin_open: true
  #   tty: true
  #   restart: 'no' # optional, since it's a one-time migration

networks:
  backend:
    driver: bridge
    name: katpool-app_backend
